{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # now given a starting note, we will have a key already define\
# generate a pseudo random list of notes based on the length of the rhythm\
\
define :generate_random_notes do |midi_note, key_signature, note_lengths|\
  use_random_seed Time.now.to_i # set a random seed based on the current time\
  \
  # Define a list of notes in the given key signature\
  notes = scale(midi_note, key_signature)\
  \
  # Create a loop that generates a random note for each value in the note_lengths list\
  note_lengths.each do |length|\
    # Choose a random note from the notes list\
    note = choose(notes)\
    \
    # Play the note for the specified length\
    play note, release: length, amp: 0.02\
    \
    # Pause for a short time between each note\
    sleep length * 1\
  end\
end\
\
\
my_array = [1,1,1,1,1,1,1,1] * 6\
r6 = my_array.map \{|num| num / 6.0\}\
\
##| generate_random_notes 63, :major, r6\
\
\
\
\
\
define :generate_random_notes_with_direction do |midi_note, key_signature, note_lengths, direction|\
  use_random_seed Time.now.to_i # set a random seed based on the current time\
  \
  #Define a list of notes in the given key signature\
  notes = scale(midi_note, key_signature)\
  \
  #Determine the halfway point in the notes list\
  halfway = notes.length / 2\
  \
  #Create a loop that generates a random note for each value in the note_lengths list\
  note_lengths.each_with_index do |length, i|\
    if direction == :up_first\
      #Ascend up to the halfway point, then descend\
      if i < halfway\
        note = notes[i]\
      else\
        note = notes[notes.length - 1 - i]\
      end\
    else\
      #Descend first, then ascend\
      if i < halfway\
        note = notes[notes.length - 1 - i]\
      else\
        note = notes[i]\
      end\
    end\
    \
    #Play the note for the specified length\
    play note, release: length, amp: 0.02\
    \
    #Pause for a short time between each note\
    sleep length * 0.5\
  end\
end\
\
##| Generate a sequence of random notes starting on MIDI note 60 (C4), using the major scale, and with note lengths of 1, 0.5, and 0.25 beats,\
##|   ascending up to halfway and then descending\
generate_random_notes_with_direction 60, :major, [1,1,1,1,1,1,1,1], :up_first\
\
##| # Generate a sequence of random notes starting on MIDI note 60 (C4), using the major scale, and with note lengths of 1, 0.5, and 0.25 beats,\
##| # descending first and then ascending\
generate_random_notes_with_direction 60, :major, [1,1,1,1,1,1,1,1], :down_first\
}